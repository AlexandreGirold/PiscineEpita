# Compiler
CC = gcc

# Compiler flags
CFLAGS = -Wall -g

# Criterion library flags
CFLAGS += -lcriterion

# Source files
SRCS = add.c create.c del.c pop.c print.c

# Object files
OBJS = $(SRCS:.c=.o)

# Test source file
TEST_SRCS = test.c

# Test object files
TEST_OBJS = $(TEST_SRCS:.c=.o)

# Executable names
EXEC = my_program
TEST_EXEC = test_program

# Default target
all: $(EXEC)

# Linking the object files to create the main executable
$(EXEC): $(OBJS)
	$(CC) $(OBJS) -o $(EXEC)

# Linking the test object files to create the test executable
$(TEST_EXEC): $(OBJS) $(TEST_OBJS)
	$(CC) $(OBJS) $(TEST_OBJS) -o $(TEST_EXEC) $(CFLAGS)

# Compiling each source file
%.o: %.c heap.h
	$(CC) $(CFLAGS) -c $< -o $@

# Compiling the test file
$(TEST_OBJS): %.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

# Clean target to remove object files and the executables
clean:
	rm -f $(OBJS) $(EXEC) $(TEST_OBJS) $(TEST_EXEC)

.PHONY: all clean
